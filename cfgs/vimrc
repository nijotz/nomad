set nocompatible
set history=1000

set lcs=tab:+.,eol:Â·
set guicursor=n-v-c:block,o:hor50,i-ci:hor15,r-cr:hor30,sm:block
set scrolloff=3
set linebreak
set confirm
set shortmess+=a
set showcmd

set backspace=indent,eol,start

set completeopt=menuone,longest,preview  " bash-like tab completion on insert
set hlsearch  " highlight search results
set incsearch  " as I type my search, start moving through the file
set laststatus=2  " always show status bar, even if it's the last window

" Tabbing. Any settings other than these are evil.
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
filetype indent on  " filetype specific indenting

" Cycle tabbing options
map <leader><tab> :call CycleTabs()<CR>
fun! CycleTabs()
    if !&expandtab
        echo "4 space tabs"
        set shiftwidth=4
        set softtabstop=4
        set tabstop=4
        set expandtab
    elseif &expandtab && &shiftwidth == 4
        echo "2 space tabs"
        set shiftwidth=2
        set softtabstop=2
        set tabstop=2
        set expandtab
    else
        echo "Tab characters"
        set shiftwidth=4
        set softtabstop=4
        set tabstop=4
        set noexpandtab
    endif
endfun

" Keep text highlighted after shifting
vnoremap < <gv
vnoremap > >gv

syntax on  " syntax highlighting
filetype plugin on  " change settings and syntax highlighting based on filetype

" In Vim 7.4+ the combination of these two variables will show the absolute
" line number on the current line and relative line number on every other line
set relativenumber
set number

set ignorecase " Needed for smartcase to work
set smartcase " case insensitive search unless search has uppser case chars
set t_Co=256  " 256 colors

" list all matches and complete til longest common string (command line)
set wildmode=list:longest

" linenum, columnnum, percentage through file, modification flag, file path,
" read only/help/preview flags, file format, fugitive status
set statusline=[%l,%v\ %P%M]\ %f\ %r%h%w\ (%{&ff})\ %{fugitive#statusline()}

" pathogen
call pathogen#infect()
call pathogen#helptags()

" paste/nopaste
map <leader>p :set paste<CR>
map <leader>P :set nopaste<CR>

" toggle relative/normal line numbers
map <leader>n :set rnu<CR>:set nu<CR>
map <leader>N :set nornu<CR>:set nu<CR>

" toggle nerdtree
nnoremap <leader>t :NERDTreeToggle<cr>

" gundo
map <leader>u :GundoToggle<CR>

" hide matches on <leader>space
nnoremap <leader><space> :nohlsearch<cr>

" shortcut for Conque bash shell
nnoremap <leader>sh :ConqueTerm bash<cr>

" color lines past 80
windo let &colorcolumn = join(range(81,999),",")

" cursor positioning
set cursorline
set cursorcolumn
highlight CursorColumn ctermbg=234 cterm=NONE
highlight CursorLine ctermbg=234 cterm=NONE

" sudo write this file
cmap W! w !sudo tee % >/dev/null

" tell syntastic which utilities to use
let g:syntastic_python_checkers=['pyflakes']

" Set tidy as the indent program when editting xml files
au FileType xml setlocal equalprg=tidy\ -i\ -xml\ --indent-spaces\ 4\ 2>/dev/null

" Set tidy as the indent program when editting html files
au FileType html setlocal equalprg=tidy\ -i\ -html\ --indent-spaces\ 4\ 2>/dev/null

set background=dark
colorscheme solarized

let g:ctrlp_map = '<leader>f'
let g:ctrlp_working_path_mode = 0  " Don't mess with the search path
call ctrlp_bdelete#init()  " Plugin to delete buffers in CtrlPBuf mode
