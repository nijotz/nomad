alias tmux="TERM=xterm-256color tmux"

settitle() {
  printf "\033k$*\033\\"
}

parse_host() {
  # Parse anything that can be passed to ssh, including flags and the hostname,
  # and just return what tmux should display as the window name

  sed_statements[0]='s/-p *[0-9]*//g'    # ignore port flag
  sed_statements[1]='s/-A//g'            # ignore agent forwarding flag
  #sed_statements[2]='s/[^ @]*@//g'       # ignore usernames
  sed_statements[2]="s/${USER}@//g"      # ignore username if same
  sed_statements[3]='s/ssh[ ]*//g'       # ignore the actual ssh command

  # ignore domains if FQDN is used. keep IP addresses intact
  sed_statements[4]='s/\([[:alpha:]][[:alpha:]]\)\..*/\1/g'

  sed_arguments=""
  for i in $(seq 0 $((${#sed_statements[@]} - 1))); do
    sed_arguments="${sed_arguments} -e '${sed_statements[$i]}'"
  done

  echo $* | eval sed $sed_arguments
}

ssh() {

  # If a Ctrl-C is ever sent, make sure tmux window naming goes back to the
  # default.  This fixes the window name not reverting when Ctrl-C'ing during
  # password input for ssh.
  trap 'tmux set-window-option automatic-rename on > /dev/null' 2

  settitle $(parse_host $*)
  command ssh "$@"

  # revert tmux window name to default
  tmux set-window-option automatic-rename on > /dev/null
}
